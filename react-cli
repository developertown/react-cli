#!/bin/bash

# regular colors
K="\033[0;30m"    # black
R="\033[0;31m"    # red
G="\033[0;32m"    # green
Y="\033[0;33m"    # yellow
B="\033[0;34m"    # blue
M="\033[0;35m"    # magenta
C="\033[0;36m"    # cyan
W="\033[0;37m"    # white

# emphasized (bolded) colors
EMK="\033[1;30m"    # black
EMR="\033[1;31m"    # red
EMG="\033[1;32m"    # green
EMY="\033[1;33m"    # yellow
EMB="\033[1;34m"    # blue
EMM="\033[1;35m"    # magenta
EMC="\033[1;36m"    # cyan
EMW="\033[1;37m"    # white

if [ -z "$REACT_CLI_PATH" ]; then
  coloredEcho "${EMR}\$REACT_CLI_PATH is not set!"
  echo '$REACT_CLI_PATH must point to wherever you cloned the react-cli project.'
  exit 1
fi

APP_PATH="$REACT_CLI_PATH/packages/react-app"
GENERATOR_PATH="$REACT_CLI_PATH/packages/react-generators"

function react-cli {
  # First arg
  given_command=$1
  # The rest of the args
  arguments=${@:2}

  ensureDependencies

  case $given_command in
    new)
      ( cd $APP_PATH && yarn ) \
      && \
      ember new $arguments \
            --blueprint $APP_PATH \
            --yarn \
            --skip-git 
    ;;

    g | generate)
      ( cd $GENERATOR_PATH && yarn ) \
      && \
      ember new $arguments \
            --blueprint $GENERATOR_PATH \
            --yarn \
            --skip-git 
    ;;

    *) print_help;;
  esac
}

function print_help {
  echo ""
  echo "Available Commands:"
  echo ""
  echo "new                creates a new app, given options"
  echo "  examples:"
  echo "     ./react-cli new MyProject --directory ~/Development/MyProject --auth0 --jsonapi"
  echo "     ./react-cli new MyProject --jsonapi --redux"
  echo ""
  echo "  available flags:"
  echo "    --directory"
  echo "    --auth0"
  echo "    --i18n"
  echo "    --jsonapi"
  echo "    --dotnetBackend"
  echo "    --materialUi"
  echo "    --redux" 
}

function ensureDependencies {
  set -e
  ensureYarnExists
  checkForYarnInPath

  ensureEmberCLIExists
  set +e
}

function checkForYarnInPath {
  if [[ $PATH != *"$(yarn global bin)"* ]]; then 
    coloredEcho "${EMR}yarn's bin folder is not in the PATH"
    echo "add '$(yarn global bin)' to the \$PATH"
    echo ""
    echo "export PATH=\"\$PATH:\$(yarn global bin)\""
    exit 1
  fi
}

function ensureYarnExists {
  if which yarn > /dev/null; then
    coloredEcho "${G}✔ yarn is installed"
  else
    coloredEcho "${R}✘ yarn is not installed. Installing..."
    npm install -g yarn
  fi
}

function ensureEmberCLIExists {
  if which ember > /dev/null; then
    coloredEcho "${G}✔ ember-cli is installed"
  else
    coloredEcho "${R}✘ ember-cli is not installed. Installing..."
    yarn global add ember-cli
  fi
}

function coloredEcho {
  echo -e $*
  echo -en "\033[0m"
}

if [ $1 ]; then
  react-cli $*
else
  print_help
fi
